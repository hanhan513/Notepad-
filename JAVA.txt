	面向对象---封装，继承，多态；
	
day04;  调用静态方法 ？   可变参数//多个时做最后一个 
		foreach; // for(int temp:arr)  同样多维可以嵌套 -->数组

day05； 类- 构造方法//默认无参 -创建对象（给字段赋初值）//构造方法名和类名相同 ！禁止返回值 void都不能写(创建对象就是执行构造方法)
		：写了一个构造方法，建议保证有一个无参的构造方法-为了拓展；  
		
		static -->类成员（可以类调用）；//所有对象共享
		匿名对象只能使用一次； 

		面向对象之封装：private ；

		**javaBean: 规范 ； 

		this.//表示当前对象；  static代码块里面不能用； getxx,setxx  ,isxx.
			调用构造器；（必须是构造器里面第一个语句）；、

		包的起名（小写 ）：域名反过来写.项目的名字.模块名.组建名 ；

		import:引入某一个类(包名.子包名...类)  xx.*;(引入所有类) ；

day06： 继承复写-拓展；"is a "
		class xx extends oo//xx属于oo的特殊，所以xx就拓展到oo类；xx()子类或拓展类oo（父类，基类）有且只有一个直接父类；
		父类里私有的子类不能继承.   子类在初始化前必须首先调用父类的构造函数，再调用自身；
			覆写（@Override）――父类的一个方法不适合子类，在子类里覆写一个（签名要同，返回类型相同或更小，访问权限大于或等于父类）；
		Super.xx(想在子类调用父类的覆写过的方法（只能在子类中,并且第一行）)；

		编译时类型和运行时类型不同--多态；（屏蔽不同子类之间的差异，代码更通用）；
		编译类型里面的方法不能调用实际类型里面的方法（但被子类覆写了就调用了子类的）；

		分类：
			编译时多态，方法重载。
			运行时多态，方法覆写。

		转换： 强制转换之前先判断是否是某一种类型―――
				
				if(xxx instanceof ooo){ }   instenceo不能随便用――没有继承关系不能用

		
		组合关系： 一个类里里包含另外一个类的引用 ；"has a"
	
         